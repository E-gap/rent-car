{"version":3,"file":"static/js/709.2777705b.chunk.js","mappings":"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","sources":["webpack://rent-car/./src/components/FormSign/FormSign.module.css?bb6d","components/FormSign/FormSign.jsx","webpack://rent-car/./src/pages/Login/Login.module.css?b420","pages/Login/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"FormSign_form__ah6tL\",\"label\":\"FormSign_label__Slzgc\",\"submit\":\"FormSign_submit__PNeJL\",\"buttonHide\":\"FormSign_buttonHide__nP+4s\",\"question\":\"FormSign_question__9Q4Ts\",\"errorValidation\":\"FormSign_errorValidation__bOVkr\"};","import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useState } from 'react';\nimport css from './FormSign.module.css';\nimport PropTypes from 'prop-types';\nimport { BiShow } from 'react-icons/bi';\nimport { register, login } from '../../redux/auth/authOperations';\nimport { useDispatch } from 'react-redux';\nimport Button from '../Button/Button';\nimport { useNavigate } from 'react-router-dom';\n\nfunction FormSign({ sign }) {\n  const navigate = useNavigate();\n  const [typePassword, setTypePassword] = useState('password');\n  const [typeConfirmPassword, setTypeConfirmPassword] = useState('password');\n  const dispatch = useDispatch();\n  const [signValue, setSignValue] = useState(() => {\n    return sign;\n  });\n\n  function validateEmail(value) {\n    if (!value) {\n      return 'Email is required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n      return 'Enter a valid Email';\n    }\n  }\n\n  function validatePassword(value) {\n    const passwordRegex = /(?=.*[0-9])/;\n    if (!value) {\n      return 'Password is required';\n    } else if (value.length < 6) {\n      return 'Password must be 6 characters long';\n    } else if (!passwordRegex.test(value)) {\n      return 'Password must contain one number.';\n    }\n  }\n\n  const SignupSchema = Yup.object().shape({\n    name:\n      signValue === 'signUp'\n        ? Yup.string().required('Please input name')\n        : Yup.string(),\n    email: Yup.string().required('Please input email'),\n    password: Yup.string().required('Please input password'),\n    confirmPassword: Yup.string().oneOf(\n      [Yup.ref('password'), null],\n      'Passwords must match'\n    ),\n  });\n\n  const submitForm = (values, actions) => {\n    const userDataForRegister = {\n      name: values.name,\n      email: values.email,\n      password: values.password,\n    };\n\n    const userDataForLogin = {\n      email: values.email,\n      password: values.password,\n    };\n\n    if (signValue === 'signUp') {\n      dispatch(register(userDataForRegister));\n    } else {\n      dispatch(login(userDataForLogin));\n    }\n  };\n\n  const toggleShowPassword = () => {\n    if (typePassword === 'password') {\n      setTypePassword('text');\n    } else {\n      setTypePassword('password');\n    }\n  };\n\n  const toggleShowConfirmPassword = () => {\n    if (typeConfirmPassword === 'password') {\n      setTypeConfirmPassword('text');\n    } else {\n      setTypeConfirmPassword('password');\n    }\n  };\n\n  const handleButton = e => {\n    if (e.target.textContent === 'Sign Up') {\n      setSignValue('signUp');\n      navigate('/register');\n    } else {\n      setSignValue('signIn');\n      navigate('/login');\n    }\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          name: '',\n          email: '',\n          password: '',\n          confirmPassword: '',\n        }}\n        validationSchema={SignupSchema}\n        onSubmit={submitForm}\n      >\n        {({ errors, touched, values }) => (\n          <Form className={css.form}>\n            {signValue === 'signUp' && (\n              <label className={css.label}>\n                Name\n                <Field name=\"name\" />\n                <ErrorMessage\n                  name=\"name\"\n                  render={message => (\n                    <div className={css.errorValidation}>{message}</div>\n                  )}\n                />\n              </label>\n            )}\n            <label className={css.label}>\n              E-mail\n              <Field validate={validateEmail} type=\"email\" name=\"email\" />\n              <ErrorMessage\n                name=\"email\"\n                render={message => (\n                  <div className={css.errorValidation}>{message}</div>\n                )}\n              />\n            </label>\n            <label className={css.label}>\n              Password\n              <Field\n                type={typePassword}\n                name=\"password\"\n                validate={validatePassword}\n              />\n              <BiShow className={css.buttonHide} onClick={toggleShowPassword} />\n              <ErrorMessage\n                name=\"password\"\n                render={message => (\n                  <div className={css.errorValidation}>{message}</div>\n                )}\n              />\n            </label>\n            {signValue === 'signUp' && (\n              <label className={css.label}>\n                Confirm password\n                <Field type={typeConfirmPassword} name=\"confirmPassword\" />\n                <BiShow\n                  className={css.buttonHide}\n                  onClick={toggleShowConfirmPassword}\n                />\n                <ErrorMessage\n                  name=\"confirmPassword\"\n                  render={message => (\n                    <div className={css.errorValidation}>\n                      Passwords must match\n                    </div>\n                  )}\n                />\n              </label>\n            )}\n            <button type=\"submit\" className={css.submit}>\n              Submit\n            </button>\n          </Form>\n        )}\n      </Formik>\n      {signValue === 'signUp' ? (\n        <p className={css.question}>\n          Are you Signed Up?\n          <Button\n            text=\"Sign In\"\n            handleButton={handleButton}\n            view=\"buttonQuestionSign\"\n          />\n        </p>\n      ) : (\n        <p className={css.question}>\n          Are you not Signed Up?\n          <Button\n            text=\"Sign Up\"\n            handleButton={handleButton}\n            view=\"buttonQuestionSign\"\n          />\n        </p>\n      )}\n    </>\n  );\n}\n\nexport default FormSign;\n\nFormSign.propTypes = {\n  sign: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"titlePage\":\"Login_titlePage__5L0yK\"};","import React from 'react';\nimport Container from 'components/Container/Container';\nimport css from './Login.module.css';\nimport FormSign from 'components/FormSign/FormSign';\n\nfunction Login() {\n  return (\n    <div className={css.loginPage}>\n      <Container>\n        <h1 className={css.titlePage}>Login</h1>\n        <FormSign sign=\"signIn\" />\n      </Container>\n    </div>\n  );\n}\n\nexport default Login;\n"],"names":["sign","navigate","useNavigate","useState","typePassword","setTypePassword","typeConfirmPassword","setTypeConfirmPassword","dispatch","useDispatch","signValue","setSignValue","validateEmail","value","test","validatePassword","length","SignupSchema","Yup","shape","name","required","email","password","confirmPassword","oneOf","toggleShowPassword","toggleShowConfirmPassword","handleButton","e","target","textContent","initialValues","validationSchema","onSubmit","values","actions","userDataForRegister","userDataForLogin","register","login","errors","touched","className","css","render","message","validate","type","onClick","Button","text","view","Container","FormSign"],"sourceRoot":""}