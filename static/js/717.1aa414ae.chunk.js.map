{"version":3,"file":"static/js/717.1aa414ae.chunk.js","mappings":"yIACA,MAAyB,qC,SCoBzB,EAlB6B,SAAC,GAAyB,IAAvBA,EAAsB,EAAtBA,gBAC9B,OACE,iCACE,mBAAQC,MAAM,GAAGC,UAAWC,EAA5B,oBAGCH,EAAgBI,OAAOC,KAAI,SAACC,EAAOC,GAClC,OACE,mBAAoBN,MAAOK,EAA3B,SACGA,GADUC,EAIhB,KACD,mBAAQN,MAAM,OAAd,oBAGL,C,oEClBD,MAA6B,+BAA7B,EAAwE,8B,kDCAxE,EAAuB,yBAAvB,EAAwD,0BAAxD,EAAgG,gCAAhG,EAAkJ,oCAAlJ,EAA8L,0BAA9L,EAAiO,2BAAjO,EAA8Q,oCAA9Q,EAA+T,+BAA/T,EAAqW,yB,8EC8RrW,MA7QA,YAAuC,IAAjBO,EAAgB,EAAhBA,aACpB,GAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAIIC,EAAAA,EAAAA,IAAYC,EAAAA,IAJhB,IACEC,IAAAA,OADF,MACQ,cADR,MAEEC,KAAAA,OAFF,MAES,eAFT,EAGEC,EAHF,EAGEA,MA2CIC,EAAe,SAAAC,GACnBP,EAAgBO,EAAEC,OAAOC,MAAM,GAChC,EAED,OACE,+BACE,SAAC,KAAD,CACEC,cAAe,CACbC,KAAM,GACNC,MAAO,GACPC,KAAM,GACNC,aAAc,GACdC,QAAS,GACTC,MAAO,GACPC,OAAQ,GACRd,IAAAA,EACAe,KAAM,GACNvB,MAAO,GACPwB,SAAU,GACVf,KAAAA,EACAC,MAAAA,EACAe,MAAO,GACPC,YAAa,IAEfC,iBAAkBC,EAAAA,EAClBC,SAjEa,SAACC,EAAQC,GAC1B,GAAKC,EAAAA,GAAeF,EAAOd,MAAMiB,SAASH,EAAOb,QAUjD,GAAKe,EAAAA,GAAeF,EAAOd,MAAMiB,SAASH,EAAOb,OAAjD,CAIA,IAAMiB,EAAW,IAAIC,SAErBD,EAASE,OAAO,OAAQN,EAAOd,MAC/BkB,EAASE,OAAO,QAASN,EAAOb,OAChCiB,EAASE,OAAO,OAAQN,EAAOZ,MAC/BgB,EAASE,OAAO,eAAgBN,EAAOX,cACvCe,EAASE,OAAO,UAAWN,EAAOV,SAClCc,EAASE,OAAO,QAASN,EAAOT,OAChCa,EAASE,OAAO,SAAUN,EAAOR,QACjCY,EAASE,OAAO,MAAON,EAAOtB,KAC9B0B,EAASE,OAAO,OAAQN,EAAOP,MAC/BW,EAASE,OAAO,QAASN,EAAO9B,OAChCkC,EAASE,OAAO,WAAYN,EAAON,UACnCU,EAASE,OAAO,OAAQN,EAAOrB,MAC/ByB,EAASE,OAAO,QAASN,EAAOpB,OAChCwB,EAASE,OAAO,QAASN,EAAOL,OAChCS,EAASE,OAAO,cAAeN,EAAOJ,aACtCQ,EAASE,OAAO,OAAQC,KAAKC,OAC7BJ,EAASE,OAAO,QAAShC,GAEzB2B,EAAQQ,YAERrC,EAAagC,EAxBZ,OAXCM,IAAAA,OAAAA,QAAwB,2BAA4B,CAClDC,SAAU,OACVC,SAAU,gBACVC,QAAS,IACTC,MAAO,SAgCZ,EAQG,SAqBG,gBAAGd,EAAH,EAAGA,OAAH,OACC,UAAC,KAAD,CAAMlC,UAAWC,EAAjB,WACE,mBAAOD,UAAWC,EAAlB,kBAEE,SAAC,KAAD,CAAOgD,KAAK,OAAOjD,UAAWC,EAAWiD,GAAG,SAA5C,UACE,SAACC,EAAA,EAAD,CAAsBrD,gBAAiBsC,EAAAA,GAAAA,WAEzC,SAAC,KAAD,CACEa,KAAK,OACLG,OAAQ,SAAAC,GAAO,OACb,gBAAKrD,UAAWC,EAAhB,SAAsCoD,GADzB,QAKnB,mBAAOrD,UAAWC,EAAlB,mBAEE,SAAC,KAAD,CACEgD,KAAK,QACLjD,UAAWC,EACXiD,GAAG,SACHI,UAAWpB,EAAOd,KAJpB,UAME,SAAC+B,EAAA,EAAD,CACErD,gBACGoC,EAAOd,KAAYgB,EAAAA,GAAeF,EAAOd,MAA3B,QAIrB,SAAC,KAAD,CACE6B,KAAK,QACLG,OAAQ,SAAAC,GAAO,OACb,gBAAKrD,UAAWC,EAAhB,SAAsCoD,GADzB,QAKnB,mBAAOrD,UAAWC,EAAlB,kBAEE,SAAC,KAAD,CAAOgD,KAAK,OAAOC,GAAG,SAAtB,UACE,SAACC,EAAA,EAAD,CAAsBrD,gBAAiByD,EAAAA,QAEzC,SAAC,KAAD,CACEN,KAAK,OACLG,OAAQ,SAAAC,GAAO,OACb,gBAAKrD,UAAWC,EAAhB,SAAsCoD,GADzB,QAKnB,mBAAOrD,UAAWC,EAAlB,kBAEE,SAAC,KAAD,CAAOgD,KAAK,OAAOC,GAAG,SAAtB,UACE,SAACC,EAAA,EAAD,CAAsBrD,gBAAiB0D,EAAAA,QAEzC,SAAC,KAAD,CACEP,KAAK,OACLG,OAAQ,SAAAC,GAAO,OACb,gBAAKrD,UAAWC,EAAhB,SAAsCoD,GADzB,QAKnB,mBAAOrD,UAAWC,EAAlB,0BAEE,SAAC,KAAD,CAAOgD,KAAK,eAAeC,GAAG,SAA9B,UACE,SAACC,EAAA,EAAD,CAAsBrD,gBAAiB2D,EAAAA,QAEzC,SAAC,KAAD,CACER,KAAK,eACLG,OAAQ,SAAAC,GAAO,OACb,gBAAKrD,UAAWC,EAAhB,SAAsCoD,GADzB,QAKnB,mBAAOrD,UAAWC,EAAlB,uBAEE,SAAC,KAAD,CAAOgD,KAAK,WAAWC,GAAG,SAA1B,UACE,SAACC,EAAA,EAAD,CAAsBrD,gBAAiB4D,EAAAA,QAEzC,SAAC,KAAD,CACET,KAAK,WACLG,OAAQ,SAAAC,GAAO,OACb,gBAAKrD,UAAWC,EAAhB,SAAsCoD,GADzB,QAKnB,mBAAOrD,UAAWC,EAAlB,qBAEE,SAAC,KAAD,CAAOgD,KAAK,aACZ,SAAC,KAAD,CACEA,KAAK,UACLG,OAAQ,SAAAC,GAAO,OACb,gBAAKrD,UAAWC,EAAhB,SAAsCoD,GADzB,QAKnB,mBAAOrD,UAAWC,EAAlB,6BAEE,SAAC,KAAD,CAAOgD,KAAK,YACZ,SAAC,KAAD,CACEA,KAAK,SACLG,OAAQ,SAAAC,GAAO,OACb,gBAAKrD,UAAWC,EAAhB,SAAsCoD,GADzB,QAKnB,mBAAOrD,UAAWC,EAAlB,mBAEE,SAAC,KAAD,CAAOgD,KAAK,WACZ,SAAC,KAAD,CACEA,KAAK,QACLG,OAAQ,SAAAC,GAAO,OACb,gBAAKrD,UAAWC,EAAhB,SAAsCoD,GADzB,QAKnB,mBAAOrD,UAAWC,EAAlB,mBAEE,SAAC,KAAD,CAAOgD,KAAK,QAAQC,GAAG,SAAvB,UACE,SAACC,EAAA,EAAD,CAAsBrD,gBAAiB6D,EAAAA,QAEzC,SAAC,KAAD,CACEV,KAAK,QACLG,OAAQ,SAAAC,GAAO,OACb,gBAAKrD,UAAWC,EAAhB,SAAsCoD,GADzB,QAKnB,mBAAOrD,UAAWC,EAAlB,mBAEE,SAAC,KAAD,CAAOgD,KAAK,WACZ,SAAC,KAAD,CACEA,KAAK,QACLG,OAAQ,SAAAC,GAAO,OACb,gBAAKrD,UAAWC,EAAhB,SAAsCoD,GADzB,QAKnB,mBAAOrD,UAAWC,EAAlB,kBAEE,SAAC,KAAD,CAAOgD,KAAK,UACZ,SAAC,KAAD,CACEA,KAAK,OACLG,OAAQ,SAAAC,GAAO,OACb,gBAAKrD,UAAWC,EAAhB,SAAsCoD,GADzB,QAKnB,mBAAOrD,UAAWC,EAAlB,mBAEE,SAAC,KAAD,CAAOgD,KAAK,WACZ,SAAC,KAAD,CACEA,KAAK,QACLG,OAAQ,SAAAC,GAAO,OACb,gBAAKrD,UAAWC,EAAhB,SAAsCoD,GADzB,QAKnB,mBAAOrD,UAAWC,EAAlB,iBAEE,SAAC,KAAD,CAAOgD,KAAK,SACZ,SAAC,KAAD,CACEA,KAAK,MACLG,OAAQ,SAAAC,GAAO,OACb,gBAAKrD,UAAWC,EAAhB,SAAsCoD,GADzB,QAKnB,mBAAOrD,UAAS,UAAKC,EAAL,YAAkBA,GAAlC,yBAEE,SAAC,KAAD,CACEgD,KAAK,QACLW,OAAO,OACPtC,KAAK,OACLtB,UAAWC,EAEX4D,SAAU9C,QAGd,mBAAOf,UAAS,UAAKC,EAAL,YAAkBA,GAAlC,yBAEE,SAAC,KAAD,CACEiD,GAAG,WACHD,KAAK,cACLjD,UAAWC,QAGf,mBAAQqB,KAAK,SAAStB,UAAWC,EAAjC,uBAxLH,KAgMR,E,UChQD,EAtBmB,WACjB,IAAM6D,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAUjB,OACE,oBAASjE,UAAWC,EAApB,UACE,UAACiE,EAAA,EAAD,YACE,eAAIlE,UAAWC,EAAf,sBACA,SAAC,EAAD,CAAYK,aAZG,SAAA6D,GAEnB,GADAL,GAASM,EAAAA,EAAAA,IAAOD,KACXH,EAASK,SAAShC,SAAS,YAAa,CAC3C,IAAQiC,EAAWC,OAAOP,SAAlBM,OACRR,GAASU,EAAAA,EAAAA,IAAWF,GACrB,CACF,QAUF,C,gLC3BM,IAAMX,EAAY,CACvB,MACA,QACA,QACA,SACA,QACA,OACA,QAGWJ,EAAW,CAAC,QAAS,QAAS,QAAS,aAEvCG,EAAe,CAAC,SAAU,MAAO,SAAU,WAE3CD,EAAuB,CAAC,SAAU,YAAa,SAmBrD,IAAMD,EAjBb,SAAeiB,EAAOC,EAAMC,GAG1B,IAFA,IAAIC,EAAI,CAACH,GACPI,EAAIJ,EACCI,EAAIH,GACTE,EAAEE,KAAMD,GAAKF,GAAQ,GAUvB,OAAOC,CACR,CAEuBG,CAAM,KAAM,KAAM,GAE7B3C,EAAiB,CAC5B4C,MAAO,CACL,WACA,MACA,UACA,OACA,QACA,UACA,QACA,UACA,aACA,OACA,SACA,SACA,QAEFC,IAAK,CAAC,MAAO,OACbC,QAAS,CAAC,QACVC,KAAM,CAAC,QAAS,SAChBC,MAAO,CAAC,UAAW,WACnBC,KAAM,GACNC,SAAU,CAAC,OAAQ,OACnBC,QAAS,CAAC,KAAM,KAAM,SACtBC,MAAO,CAAC,IAAK,IAAK,IAAK,SACvBC,QAAS,CAAC,MAAO,MAAO,MAAO,QAC/BC,WAAY,CAAC,OAAQ,SAAU,UAAW,SAAU,QACpDC,KAAM,CAAC,MAAO,KAAM,KAAM,KAAM,KAAM,MACtCC,OAAQ,CAAC,QAAS,UAAW,UAC7BC,OAAQ,CAAC,UAAW,QAAS,SAAU,QAAS,WAChDC,KAAM,CAAC,QAAS,SAAU,U,qEC9Df9D,EAAY+D,EAAAA,KAAaC,MAAM,CAC1C5E,KAAM2E,EAAAA,KAAaE,SAAS,qBAC5B5E,MAAO0E,EAAAA,KAAaE,SAAS,sBAC7B3E,KAAMyE,EAAAA,KAAaE,SAAS,qBAC5B1E,aAAcwE,EAAAA,KAAaE,SAAS,6BACpCzE,QAASuE,EAAAA,KACNG,UAAU,6BACVD,SAAS,wBACZxE,MAAOsE,EAAAA,KACJG,UAAU,6BACVD,SAAS,sBACZvE,OAAQqE,EAAAA,KACLG,UAAU,6BACVD,SAAS,gCACZrF,IAAKmF,EAAAA,KAAaE,SAAS,oBAC3BtE,KAAMoE,EAAAA,KAAaE,SAAS,qBAC5B7F,MAAO2F,EAAAA,KAAaE,SAAS,sBAC7BrE,SAAUmE,EAAAA,KAAaE,SAAS,0BAChCpF,KAAMkF,EAAAA,KAAaE,SAAS,qBAC5BnF,MAAOiF,EAAAA,KAAaE,SAAS,sBAC7BpE,MAAOkE,EAAAA,KAAaE,SAAS,sBAC7BnE,YAAaiE,EAAAA,KACbI,MAAOJ,EAAAA,M","sources":["webpack://rent-car/./src/components/CarMapCharacteristic/CarMapCharacteristic.module.css?5dd3","components/CarMapCharacteristic/CarMapCharacteristic.jsx","webpack://rent-car/./src/pages/AddCarPage/AddCarPage.module.css?6517","webpack://rent-car/./src/components/FormAddCar/FormAddCar.module.css?b94d","components/FormAddCar/FormAddCar.jsx","pages/AddCarPage/AddCarPage.jsx","utils/CarCharacteristics.js","utils/CarSchema.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"grayBg\":\"CarMapCharacteristic_grayBg__gGZHK\"};","import css from './CarMapCharacteristic.module.css';\nimport PropTypes from 'prop-types';\n\nconst CarMapCharacteristic = ({ characteristics }) => {\n  return (\n    <>\n      <option value=\"\" className={css.grayBg}>\n        Select\n      </option>\n      {characteristics.sort().map((color, index) => {\n        return (\n          <option key={index} value={color}>\n            {color}\n          </option>\n        );\n      })}\n      <option value=\"Else\">Else</option>\n    </>\n  );\n};\n\nexport default CarMapCharacteristic;\n\nCarMapCharacteristic.propTypes = {\n  characteristics: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"addCarPage\":\"AddCarPage_addCarPage__5EErp\",\"titlePage\":\"AddCarPage_titlePage__G-b5-\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"FormAddCar_form__Q1UaY\",\"label\":\"FormAddCar_label__TsX31\",\"description\":\"FormAddCar_description__GtByF\",\"descriptionText\":\"FormAddCar_descriptionText__wTmyG\",\"field\":\"FormAddCar_field__JnBR1\",\"submit\":\"FormAddCar_submit__EbdNV\",\"errorValidation\":\"FormAddCar_errorValidation__EJlvR\",\"uploadFile\":\"FormAddCar_uploadFile__dl2XM\",\"file\":\"FormAddCar_file__AC27O\"};","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport css from './FormAddCar.module.css';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport CarMapCharacteristic from 'components/CarMapCharacteristic/CarMapCharacteristic';\nimport {\n  carColors,\n  carTypes,\n  carFuelTypes,\n  carTransmissionTypes,\n  carYears,\n  marksAndModels,\n} from '../../utils/CarCharacteristics';\nimport { selectUserData } from '../../redux/selectors';\nimport Notiflix from 'notiflix';\nimport { useState } from 'react';\nimport { CarSchema } from '../../utils/CarSchema';\n\nfunction FormAddCar({ handleAddCar }) {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const {\n    tel = 'not tel yet',\n    city = 'not city yet',\n    email,\n  } = useSelector(selectUserData);\n\n  const submitForm = (values, actions) => {\n    if (!marksAndModels[values.mark].includes(values.model)) {\n      Notiflix.Notify.failure('Please, reselect a model', {\n        fontSize: '15px',\n        position: 'center-center',\n        timeout: 2000,\n        width: '400px',\n      });\n      return;\n    }\n\n    if (!marksAndModels[values.mark].includes(values.model)) {\n      return;\n    }\n\n    const formData = new FormData();\n\n    formData.append('mark', values.mark);\n    formData.append('model', values.model);\n    formData.append('type', values.type);\n    formData.append('transmission', values.transmission);\n    formData.append('mileage', values.mileage);\n    formData.append('power', values.power);\n    formData.append('engine', values.engine);\n    formData.append('tel', values.tel);\n    formData.append('year', values.year);\n    formData.append('color', values.color);\n    formData.append('fueltype', values.fueltype);\n    formData.append('city', values.city);\n    formData.append('email', values.email);\n    formData.append('price', values.price);\n    formData.append('description', values.description);\n    formData.append('date', Date.now());\n    formData.append('photo', selectedFile);\n\n    actions.resetForm();\n\n    handleAddCar(formData);\n  };\n\n  const handleChange = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          mark: '',\n          model: '',\n          type: '',\n          transmission: '',\n          mileage: '',\n          power: '',\n          engine: '',\n          tel,\n          year: '',\n          color: '',\n          fueltype: '',\n          city,\n          email,\n          price: '',\n          description: '',\n        }}\n        validationSchema={CarSchema}\n        onSubmit={submitForm}\n      >\n        {({ values }) => (\n          <Form className={css.form}>\n            <label className={css.label}>\n              Mark\n              <Field name=\"mark\" className={css.field} as=\"select\">\n                <CarMapCharacteristic characteristics={marksAndModels.marks} />\n              </Field>\n              <ErrorMessage\n                name=\"mark\"\n                render={message => (\n                  <div className={css.errorValidation}>{message}</div>\n                )}\n              />\n            </label>\n            <label className={css.label}>\n              Model\n              <Field\n                name=\"model\"\n                className={css.field}\n                as=\"select\"\n                disabled={!values.mark}\n              >\n                <CarMapCharacteristic\n                  characteristics={\n                    !values.mark ? [] : marksAndModels[values.mark]\n                  }\n                />\n              </Field>\n              <ErrorMessage\n                name=\"model\"\n                render={message => (\n                  <div className={css.errorValidation}>{message}</div>\n                )}\n              />\n            </label>\n            <label className={css.label}>\n              Type\n              <Field name=\"type\" as=\"select\">\n                <CarMapCharacteristic characteristics={carTypes} />\n              </Field>\n              <ErrorMessage\n                name=\"type\"\n                render={message => (\n                  <div className={css.errorValidation}>{message}</div>\n                )}\n              />\n            </label>\n            <label className={css.label}>\n              Year\n              <Field name=\"year\" as=\"select\">\n                <CarMapCharacteristic characteristics={carYears} />\n              </Field>\n              <ErrorMessage\n                name=\"year\"\n                render={message => (\n                  <div className={css.errorValidation}>{message}</div>\n                )}\n              />\n            </label>\n            <label className={css.label}>\n              Transmission\n              <Field name=\"transmission\" as=\"select\">\n                <CarMapCharacteristic characteristics={carTransmissionTypes} />\n              </Field>\n              <ErrorMessage\n                name=\"transmission\"\n                render={message => (\n                  <div className={css.errorValidation}>{message}</div>\n                )}\n              />\n            </label>\n            <label className={css.label}>\n              Fuel type\n              <Field name=\"fueltype\" as=\"select\">\n                <CarMapCharacteristic characteristics={carFuelTypes} />\n              </Field>\n              <ErrorMessage\n                name=\"fueltype\"\n                render={message => (\n                  <div className={css.errorValidation}>{message}</div>\n                )}\n              />\n            </label>\n            <label className={css.label}>\n              Mileage\n              <Field name=\"mileage\" />\n              <ErrorMessage\n                name=\"mileage\"\n                render={message => (\n                  <div className={css.errorValidation}>{message}</div>\n                )}\n              />\n            </label>\n            <label className={css.label}>\n              Engine capacity\n              <Field name=\"engine\" />\n              <ErrorMessage\n                name=\"engine\"\n                render={message => (\n                  <div className={css.errorValidation}>{message}</div>\n                )}\n              />\n            </label>\n            <label className={css.label}>\n              Power\n              <Field name=\"power\" />\n              <ErrorMessage\n                name=\"power\"\n                render={message => (\n                  <div className={css.errorValidation}>{message}</div>\n                )}\n              />\n            </label>\n            <label className={css.label}>\n              Color\n              <Field name=\"color\" as=\"select\">\n                <CarMapCharacteristic characteristics={carColors} />\n              </Field>\n              <ErrorMessage\n                name=\"color\"\n                render={message => (\n                  <div className={css.errorValidation}>{message}</div>\n                )}\n              />\n            </label>\n            <label className={css.label}>\n              Price\n              <Field name=\"price\" />\n              <ErrorMessage\n                name=\"price\"\n                render={message => (\n                  <div className={css.errorValidation}>{message}</div>\n                )}\n              />\n            </label>\n            <label className={css.label}>\n              City\n              <Field name=\"city\" />\n              <ErrorMessage\n                name=\"city\"\n                render={message => (\n                  <div className={css.errorValidation}>{message}</div>\n                )}\n              />\n            </label>\n            <label className={css.label}>\n              Email\n              <Field name=\"email\" />\n              <ErrorMessage\n                name=\"email\"\n                render={message => (\n                  <div className={css.errorValidation}>{message}</div>\n                )}\n              />\n            </label>\n            <label className={css.label}>\n              Tel\n              <Field name=\"tel\" />\n              <ErrorMessage\n                name=\"tel\"\n                render={message => (\n                  <div className={css.errorValidation}>{message}</div>\n                )}\n              />\n            </label>\n            <label className={`${css.label} ${css.uploadFile}`}>\n              Upload file\n              <Field\n                name=\"photo\"\n                accept=\".jpg\"\n                type=\"file\"\n                className={css.file}\n                /* multiple */\n                onChange={handleChange}\n              />\n            </label>\n            <label className={`${css.label} ${css.description}`}>\n              Description\n              <Field\n                as=\"textarea\"\n                name=\"description\"\n                className={css.descriptionText}\n              />\n            </label>\n            <button type=\"submit\" className={css.submit}>\n              Add car\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n}\n\nexport default FormAddCar;\n\nFormAddCar.propTypes = {\n  handleAddCar: PropTypes.func.isRequired,\n};\n","import css from './AddCarPage.module.css';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport Container from 'components/Container/Container';\nimport FormAddCar from 'components/FormAddCar/FormAddCar';\nimport { addCar, getAllCars } from '../../redux/cars/carsOperations';\n\nconst AddCarPage = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  const handleAddCar = dataCar => {\n    dispatch(addCar(dataCar));\n    if (!location.pathname.includes('favorite')) {\n      const { search } = window.location;\n      dispatch(getAllCars(search));\n    }\n  };\n\n  return (\n    <section className={css.addCarPage}>\n      <Container>\n        <h1 className={css.titlePage}>Add car</h1>\n        <FormAddCar handleAddCar={handleAddCar} />\n      </Container>\n    </section>\n  );\n};\n\nexport default AddCarPage;\n","export const carColors = [\n  'Red',\n  'Black',\n  'White',\n  'Yellow',\n  'Green',\n  'Blue',\n  'Grey',\n];\n\nexport const carTypes = ['Sedan', 'Coupe', 'Wagon', 'Hatchback'];\n\nexport const carFuelTypes = ['Benzin', 'Gas', 'Diesel', 'Electro'];\n\nexport const carTransmissionTypes = ['Manual', 'Automatic', 'Robot'];\n\nfunction range(start, stop, step) {\n  var a = [start],\n    b = start;\n  while (b < stop) {\n    a.push((b += step || 1));\n  }\n\n  /* function toArray( obj ) {\n  var i, arr = [];\n  for ( i = obj.length; i--; ){\n    arr[i] = obj[i];\n  }\n  return arr; */\n\n  return a;\n}\n\nexport const carYears = range(1960, 2023, 1);\n\nexport const marksAndModels = {\n  marks: [\n    'Mercedes',\n    'BMW',\n    'Renault',\n    'Opel',\n    'Skoda',\n    'Citroen',\n    'Mazda',\n    'Peugeot',\n    'Volkswagen',\n    'Audi',\n    'Daewoo',\n    'Toyota',\n    'Ford',\n  ],\n  BMW: ['316', '520'],\n  Renault: ['Clio'],\n  Opel: ['Astra', 'Omega'],\n  Skoda: ['Octavia', 'Felicia'],\n  Else: [],\n  Mercedes: ['320E', '190'],\n  Citroen: ['C4', 'C6', 'Xsara'],\n  Mazda: ['3', '6', '5', 'Miata'],\n  Peugeot: ['306', '305', '607', '3008'],\n  Volkswagen: ['Golf', 'Passat', 'Touareg', 'Touran', 'Polo'],\n  Audi: ['100', 'A4', 'A6', 'QQ', 'Q5', 'Q7'],\n  Daewoo: ['Lanos', 'Leganza', 'Espero'],\n  Toyota: ['Corolla', 'Camry', 'Avalon', 'Auris', 'Avensis'],\n  Ford: ['Focus', 'Mondeo', 'Fiesta'],\n};\n","import * as Yup from 'yup';\n\nexport const CarSchema = Yup.object().shape({\n  mark: Yup.string().required('Please input mark'),\n  model: Yup.string().required('Please input model'),\n  type: Yup.string().required('Please input type'),\n  transmission: Yup.string().required('Please input transmission'),\n  mileage: Yup.number()\n    .typeError('you must specify a number')\n    .required('Please input mileage'),\n  power: Yup.number()\n    .typeError('you must specify a number')\n    .required('Please input power'),\n  engine: Yup.number()\n    .typeError('you must specify a number')\n    .required('Please input engine capacity'),\n  tel: Yup.string().required('Please input tel'),\n  year: Yup.number().required('Please input year'),\n  color: Yup.string().required('Please input color'),\n  fueltype: Yup.string().required('Please input fuel type'),\n  city: Yup.string().required('Please input city'),\n  email: Yup.string().required('Please input email'),\n  price: Yup.number().required('Please input price'),\n  description: Yup.string(),\n  photo: Yup.mixed(),\n});\n"],"names":["characteristics","value","className","css","sort","map","color","index","handleAddCar","useState","selectedFile","setSelectedFile","useSelector","selectUserData","tel","city","email","handleChange","e","target","files","initialValues","mark","model","type","transmission","mileage","power","engine","year","fueltype","price","description","validationSchema","CarSchema","onSubmit","values","actions","marksAndModels","includes","formData","FormData","append","Date","now","resetForm","Notiflix","fontSize","position","timeout","width","name","as","CarMapCharacteristic","render","message","disabled","carTypes","carYears","carTransmissionTypes","carFuelTypes","carColors","accept","onChange","dispatch","useDispatch","location","useLocation","Container","dataCar","addCar","pathname","search","window","getAllCars","start","stop","step","a","b","push","range","marks","BMW","Renault","Opel","Skoda","Else","Mercedes","Citroen","Mazda","Peugeot","Volkswagen","Audi","Daewoo","Toyota","Ford","Yup","shape","required","typeError","photo"],"sourceRoot":""}