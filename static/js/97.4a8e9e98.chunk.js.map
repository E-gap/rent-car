{"version":3,"file":"static/js/97.4a8e9e98.chunk.js","mappings":"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","sources":["webpack://rent-car/./src/pages/UserPage/UserPage.module.css?e2e5","webpack://rent-car/./src/components/UserDataForm/UserDataForm.module.css?c400","components/UserDataForm/UserDataForm.jsx","pages/UserPage/UserPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"userPage\":\"UserPage_userPage__Gdrbq\",\"titlePage\":\"UserPage_titlePage__L2xJe\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"UserDataForm_form__Biis+\",\"label\":\"UserDataForm_label__hJiV6\",\"field\":\"UserDataForm_field__QuH52\",\"errorValidation\":\"UserDataForm_errorValidation__ss+rG\",\"buttonsChanges\":\"UserDataForm_buttonsChanges__yspOl\"};","import css from './UserDataForm.module.css';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { updateUser } from '../../redux/auth/authOperations';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst UserDataForm = ({\n  userData: {\n    userData: { email, name, city = 'no city yet', tel = 'no tel yet' },\n    userId,\n  },\n}) => {\n  const [isDisabledFields, setIsDisabledFields] = useState(true);\n  const [textButton, setTextButton] = useState('');\n  const dispatch = useDispatch();\n\n  const UpdateUserSchema = Yup.object().shape({\n    name: Yup.string().required('Please input your name'),\n    email: Yup.string().required('Please input email'),\n    tel: Yup.string(),\n    city: Yup.string(),\n  });\n\n  const submitForm = (values, actions) => {\n    const dataUser = { dataUser: { ...values }, userId };\n\n    if (textButton === 'Save changes') {\n      setIsDisabledFields(true);\n      dispatch(updateUser(dataUser));\n    } else {\n      actions.setValues(initialValues);\n    }\n  };\n\n  const initialValues = {\n    name,\n    email,\n    city,\n    tel,\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={UpdateUserSchema}\n        onSubmit={submitForm}\n      >\n        <Form className={css.form}>\n          <label className={css.label}>\n            Name\n            <Field\n              name=\"name\"\n              className={css.field}\n              disabled={isDisabledFields}\n            />\n            <ErrorMessage\n              name=\"name\"\n              render={message => (\n                <div className={css.errorValidation}>{message}</div>\n              )}\n            />\n          </label>\n          <label className={css.label}>\n            Email\n            <Field name=\"email\" disabled={isDisabledFields} />\n            <ErrorMessage\n              name=\"email\"\n              render={message => (\n                <div className={css.errorValidation}>{message}</div>\n              )}\n            />\n          </label>\n          <label className={css.label}>\n            Tel\n            <Field name=\"tel\" disabled={isDisabledFields} />\n            <ErrorMessage\n              name=\"tel\"\n              render={message => (\n                <div className={css.errorValidation}>{message}</div>\n              )}\n            />\n          </label>\n          <label className={css.label}>\n            City\n            <Field name=\"city\" disabled={isDisabledFields} />\n            <ErrorMessage\n              name=\"city\"\n              render={message => (\n                <div className={css.errorValidation}>{message}</div>\n              )}\n            />\n          </label>\n          <div className={css.buttonsChanges}>\n            <button\n              type=\"submit\"\n              className={css.buttonChangeCar}\n              onClick={e => {\n                setIsDisabledFields(!isDisabledFields);\n                setTextButton(e.target.textContent);\n              }}\n            >\n              {isDisabledFields ? 'Change data' : 'Cancel changes'}\n            </button>\n            <button\n              type=\"submit\"\n              className={css.submit}\n              onClick={e => {\n                setTextButton(e.target.textContent);\n              }}\n              disabled={isDisabledFields}\n            >\n              Save changes\n            </button>\n          </div>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n\nexport default UserDataForm;\n","import css from './UserPage.module.css';\nimport Button from '../../components/Button/Button';\nimport UserDataForm from '../../components/UserDataForm/UserDataForm';\nimport Container from 'components/Container/Container';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { selectUserData, selectUserId } from '../../redux/selectors';\n\nconst UserPage = () => {\n  const userId = useSelector(selectUserId);\n  const userData = useSelector(selectUserData);\n  const navigate = useNavigate();\n  const handleHeaderButton = () => {\n    navigate('/user/userCars');\n  };\n\n  return (\n    <section className={css.userPage}>\n      <Container>\n        <h1 className={css.titlePage}>Your information</h1>\n        <UserDataForm userData={{ userData, userId }} />\n        <Button\n          text=\"My Cars\"\n          handleButton={handleHeaderButton}\n          view=\"mycars\"\n        />\n      </Container>\n    </section>\n  );\n};\n\nexport default UserPage;\n"],"names":["userData","email","name","city","tel","userId","useState","isDisabledFields","setIsDisabledFields","textButton","setTextButton","dispatch","useDispatch","UpdateUserSchema","Yup","shape","required","initialValues","validationSchema","onSubmit","values","actions","dataUser","updateUser","setValues","className","css","disabled","render","message","type","onClick","e","target","textContent","useSelector","selectUserId","selectUserData","navigate","useNavigate","Container","Button","text","handleButton","view"],"sourceRoot":""}